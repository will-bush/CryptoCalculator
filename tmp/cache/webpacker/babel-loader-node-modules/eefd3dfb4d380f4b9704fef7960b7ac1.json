{"ast":null,"code":"var _jsxFileName = \"/Users/Will/Development/crypt-calculator/app/javascript/components/Search.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React, { Component } from 'react';\nimport SearchResult from './SearchResult';\n\nvar Search =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Search, _Component);\n\n  function Search(props) {\n    _classCallCheck(this, Search);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Search).call(this, props));\n  }\n\n  _createClass(Search, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var searchResults = this.props.searchResults.map(function (curr) {\n        return React.createElement(SearchResult, {\n          key: curr.id,\n          currency: curr,\n          handleSelect: _this.props.handleSelect,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, \"Cryptocurrency Portfolio Calculator\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"Search for a Currency:\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.props.handleChange,\n        autoComplete: \"off\",\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Ex: Bitcoin, Litecoin, Ethereum...\",\n        value: this.props.name,\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"currency-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, searchResults)));\n    }\n  }]);\n\n  return Search;\n}(Component);\n\nexport default Search;","map":{"version":3,"sources":["/Users/Will/Development/crypt-calculator/app/javascript/components/Search.js"],"names":["React","Component","SearchResult","Search","props","searchResults","map","curr","id","handleSelect","handleChange","name"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;IAEMC,M;;;;;AACJ,kBAAYC,KAAZ,EAAkB;AAAA;;AAAA,+EACVA,KADU;AAEjB;;;;6BAEO;AAAA;;AACN,UAAMC,aAAa,GAAG,KAAKD,KAAL,CAAWC,aAAX,CAAyBC,GAAzB,CAA8B,UAAAC,IAAI;AAAA,eAAI,oBAAC,YAAD;AAAc,UAAA,GAAG,EAAEA,IAAI,CAACC,EAAxB;AAA4B,UAAA,QAAQ,EAAED,IAAtC;AAA4C,UAAA,YAAY,EAAE,KAAI,CAACH,KAAL,CAAWK,YAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAJ;AAAA,OAAlC,CAAtB;AAEA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EACuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADvC,EAEE;AAAO,QAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWM,YAA5B;AAA0C,QAAA,YAAY,EAAC,KAAvD;AAA6D,QAAA,IAAI,EAAC,MAAlE;AAAyE,QAAA,IAAI,EAAC,MAA9E;AAAqF,QAAA,WAAW,EAAC,oCAAjG;AAAsI,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWO,IAAxJ;AAA8J,QAAA,SAAS,EAAC,OAAxK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAKE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGN,aADH,CALF,CAFF,CADF;AAcD;;;;EAtBkBJ,S;;AAyBrB,eAAeE,MAAf","sourcesContent":["import React, { Component } from 'react'\nimport SearchResult from './SearchResult'\n\nclass Search extends Component {\n  constructor(props){\n    super(props)\n  }\n\n  render(){\n    const searchResults = this.props.searchResults.map( curr => <SearchResult key={curr.id} currency={curr} handleSelect={this.props.handleSelect} />)\n\n    return(\n      <div>\n        <h1>Cryptocurrency Portfolio Calculator</h1>\n        <form>\n          <div className=\"form-group\">\n            <label>Search for a Currency:</label><br/>\n            <input onChange={this.props.handleChange} autoComplete=\"off\" type=\"text\" name=\"name\" placeholder=\"Ex: Bitcoin, Litecoin, Ethereum...\" value={this.props.name} className=\"field\"/>\n          </div>\n          <div className=\"currency-list\">\n            {searchResults}\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default Search"]},"metadata":{},"sourceType":"module"}